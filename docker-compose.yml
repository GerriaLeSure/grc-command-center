version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: grc-postgres
    environment:
      POSTGRES_USER: grc_user
      POSTGRES_PASSWORD: grc_password
      POSTGRES_DB: grc_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U grc_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: grc-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: grc-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_TYPE=postgresql
      - POSTGRES_USER=grc_user
      - POSTGRES_PASSWORD=grc_password
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=grc_db
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - evidence_storage:/app/evidence_storage
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: grc-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      - NODE_ENV=production

volumes:
  postgres_data:
  evidence_storage: